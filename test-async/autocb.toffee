{p, code_eq} = require './helper'

describe 'autocb', ->
	it 'simple', ->
		code_eq "x = (autocb)->", """
			function x(autocb) {
			  autocb();
			};

		"""

	it 'simple 2', ->
		code_eq """
			x = (autocb) ->
				y!
		""", """
			function x(autocb) {
			  var _this = this;
			  y(function(_$$_0) {
				autocb(_$$_0);
			  });
			};
		"""
	it 'simple 3', ->
		code_eq """
			x = (autocb) ->
				x = y!
		""", """
			function x(autocb) {
			  var _this = this;
			  y(function() {
				autocb(x = arguments[0]);
			  });
			};
		"""
	it 'empty return', ->
		code_eq "x = (autocb)-> return", """
			function x(autocb) {
			  return autocb();
			};
		"""

	it 'autocb with args and condition', ->
		code_eq """
			(autocb(a)) ->
				if d! + e!
					f!
				d = a! + b!
				c!
		""", """
			(function(autocb) {
			  var a, d,
				_this = this;
			  d(function(_$$_7) {
				e(function(_$$_8) {
				  _$cb$_6(_$$_7 + _$$_8);
				});
			  });
			  function _$cb$_6(_$$_0) {
				if (_$$_0) {
				  f(function() {
					_$$_5();
				  });
				} else {
				  _$$_5();
				}
				function _$$_5() {
				  a(function(_$$_2) {
					b(function(_$$_3) {
					  _$cb$_1(_$$_2 + _$$_3);
					});
				  });
				  function _$cb$_1() {
					d = arguments[0];
					c(function(_$$_10) {
					  _$$_10;
					  autocb(a);
					});
				  };
				};
			  };
			});

		"""
	it 'autocb in for loop', ->
		code_eq """
			(autocb(e)) ->
				for a in b
					c!
					return
				@
		""", """
			(function(autocb) {
			  var a, e, _i, _len,
				_this = this;
			  _i = 0, _len = b.length;
			  function _step() {
				_i++;
				_body();
			  };
			  function _body() {
				if (_i < _len) {
				  a = b[_i];
				  c(function() {

					return autocb(e);
				  });
				} else {
				  _$cb$_0();
				}
			  };
			  _body();
			  function _$cb$_0() {
				_this;
				autocb(e);
			  };
			});
		"""
	it 'autocb in switch', ->
		code_eq """
			(autocb(e)) ->
				switch a
					when 'a'
						d= b!(4).d
						return
				f
		""", """
			(function(autocb) {
			  var d, e,
				_this = this;
			  switch (a) {
				case 'a':
				  b(4, function(_$$_5) {
					_$cb$_1(_$$_5);
				  });
				  function _$cb$_1(_$$_2) {
					_$cb$_0(_$$_2.d);
				  };
				  function _$cb$_0() {
					d = arguments[0];
					return autocb(e);
				  };
				  break;
				default:
				  _$cb$_4(void 0);
			  }
			  function _$cb$_4() {
				f;
				autocb(e);
			  };
			});
		"""
	it 'autocbfn', ->
		code_eq """
			coundown! = (n) ->
				n
		""", """
			function coundown(n, autocb) {
			  autocb(n);
			};
		"""

