// Generated by CoffeeScript 1.6.3
var UglifyJS, assert, code_eq, compile, p, run, strip;

assert = require('assert');

compile = require('../lib/coffee-script').compile;

UglifyJS = require('uglify-js');

p = console.log;

strip = function(code) {
  return code.replace(/\s+/g, ' ').trim()
  var ast, compressor;
  ast = UglifyJS.parse(code);
  ast.figure_out_scope();
  ast.mangle_names();
  compressor = UglifyJS.Compressor({
    warnings: false
  });
  ast = ast.transform(compressor);
  return ast.print_to_string({
    beautify: true
  });
};

code_eq = function(src_orig, dest_orig) {
  var dest, dest_wrapped, e, src, src_gened;
  try {
    src = strip(src_gened = compile(src_orig));
    dest_wrapped = "(function() {\n" + dest_orig + "\n\n}).call(this);";
    dest = strip(dest_wrapped);
    return assert.equal(src, dest);
  } catch (_error) {
    e = _error;
    console.log("<<<< src_orig");
    console.log(src_orig);
    console.log('---- \x1b[32msrc\x1b[0m');
    console.log(src_gened);
    console.log("---- dest");
    console.log(dest_wrapped);
    console.log(">>>>");
    throw e;
  }
};

run = function(code, cb) {
  console.log('a');
  return console.log(compile("(autocb) -> " + code, {
    bare: true
  }));
};

module.exports = {
  code_eq: code_eq,
  p: p,
  compile: compile,
  run: run
};
