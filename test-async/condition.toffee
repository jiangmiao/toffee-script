{p, code_eq} = require './helper'

describe 'if', ->
	it 'simple', ->
		code_eq """
			if a
				b!
			c
		""", """
			var _this = this;

			if (a) {
			  b(function() {
				_$$_0();
			  });
			} else {
			  _$$_0();
			}

			function _$$_0() {
			  return c;
			};
		"""

	it 'nested normal', ->
		code_eq """
			if a
				if b
					c!
				d
			else
				e!
			f!
		""", """
			var _this = this;

			if (a) {
			  if (b) {
				c(function() {
				  _$$_1();
				});
			  } else {
				_$$_1();
			  }
			  function _$$_1() {
				d;
				_$$_0();
			  };
			} else {
			  e(function() {
				_$$_0();
			  });
			}

			function _$$_0() {
			  f(function(_$$_2) {
				return _$$_2;
			  });
			};
		"""

	it 'nested forward', ->
		code_eq  """
			if a
				if b
					c!
			d
		""", """
			var _this = this;

			if (a) {
			  if (b) {
				c(function() {
				  _$$_0();
				});
			  } else {
				_$$_0();
			  }
			} else {
			  _$$_0();
			}

			function _$$_0() {
			  return d;
			};
		"""

	it 'nested partial', ->
		code_eq """
			if a
				x!
				if b
					return
			x
		""", """
			var _this = this;

			if (a) {
			  x(function() {
				if (b) {
				  return;
				}
				_$$_0();
			  });
			} else {
			  _$$_0();
			}

			function _$$_0() {
			  return x;
			};
		"""

	it 'if with async condition', ->
		# Need improve
		code_eq """
			if e = a!
				b
		""", """
			var e,
			  _this = this;

			a(function() {
			  _$cb$_1(e = arguments[0]);
			});
			function _$cb$_1(_$$_0) {
			  if (_$$_0) {
				return b;
			  }
			};
		"""

	it 'if with async condition multi return', ->
		code_eq """
			if e, x = a!
				b
		""","""
			var e, x,
			  _this = this;

			a(function() {
			  _$cb$_1((e = arguments[0], x = arguments[1], e));
			});
			function _$cb$_1(_$$_0) {
			  if (_$$_0) {
				return b;
			  }
			};
		"""

describe 'if + autocb', ->
	it 'simple', ->
		code_eq """
			x = (autocb) ->
				if a
					b!
		""", """
			function x(autocb) {
			  var _this = this;
			  if (a) {
				b(function(_$$_0) {
				  autocb(_$$_0);
				});
			  } else {
				autocb();
			  }
			};
		"""

	it 'with args', ->
		code_eq """
			x = (autocb) ->
				if a
					y = b!
					y
		""", """
			function x(autocb) {
			  var y,
				_this = this;
			  if (a) {
				b(function() {
				  y = arguments[0];
				  autocb(y);
				});
			  } else {
				autocb();
			  }
			};
		"""

	it 'have next', ->
		code_eq """
			x = (autocb) ->
				if a
					y = b!
				y
		""", """
			function x(autocb) {
			  var y,
				_this = this;
			  if (a) {
				b(function() {
				  y = arguments[0];
				  _$$_0();
				});
			  } else {
				_$$_0();
			  }
			  function _$$_0() {
				autocb(y);
			  };
			};
		"""

describe 'switch', ->
	it 'simple', ->
		code_eq """
			switch x
				when 'a'
					a()
				when 'b'
					b!
				else
					c!
			null
		""", """
          var _this = this;

          switch (x) {
            case 'a':
              _$cb$_0(a());
              break;
            case 'b':
              b(function(_$$_1) {
                _$cb$_0(_$$_1);
              });
              break;
            default:
              c(function(_$$_2) {
                _$cb$_0(_$$_2);
              });
          }
          function _$cb$_0() {
            return null;
          };


		"""
	it 'sync otherwise', ->
		code_eq """
			switch a
				when b
					b!
				when c
					a!
				else
					d
			null
		""", """
          var _this = this;
          switch (a) {
            case b:
              b(function(_$$_1) {
                _$cb$_0(_$$_1);
              });
              break;
            case c:
              a(function(_$$_2) {
                _$cb$_0(_$$_2);
              });
              break;
            default:
              _$cb$_0(d);
          }
          function _$cb$_0() {
            return null;
          };

		"""

	it 'ends with if', ->
		code_eq """
			(autocb) ->
				if a
					x!
					if e
						return a
		""", """
			(function(autocb) {
				var _this = this;
				if (a) {
					x(function() {
						if (e) {
							return autocb(a);
						} else {
							autocb();
						}
					});
				} else {
					autocb();
				}
			});
		"""

